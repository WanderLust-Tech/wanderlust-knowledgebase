name: Deploy on Content Changes

on:
  push:
    branches: [ main, master ]
    paths:
      - 'src/**'
      - 'public/**'
      - 'index.html'
      - 'vite.config.ts'
      - 'tailwind.config.js'
      - 'postcss.config.js'
      - 'tsconfig.json'
  workflow_dispatch: # Allow manual trigger

env:
  NODE_VERSION: '18'

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-files-content
        path: dist/
        retention-days: 30

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist-files-content
        path: dist/
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install deployment dependencies
      run: npm install basic-ftp dotenv
      
    - name: Deploy to production via FTP
      env:
        FTP_HOST: ${{ secrets.PROD_FTP_HOST }}
        FTP_USER: ${{ secrets.PROD_FTP_USER }}
        FTP_PASSWORD: ${{ secrets.PROD_FTP_PASSWORD }}
        FTP_PORT: ${{ secrets.PROD_FTP_PORT }}
        FTP_SECURE: ${{ secrets.PROD_FTP_SECURE }}
        FTP_REMOTE_PATH: ${{ secrets.PROD_FTP_REMOTE_PATH }}
        LOCAL_BUILD_PATH: ./dist
        CLEAR_REMOTE: true
      run: node scripts/deploy.js deploy
